name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout your code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for SonarQube to get full git history

      # Set up Java JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # Cache SonarQube packages
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Debug: Check for pom.xml location
      - name: Debug - locate pom.xml
        run: find . -name "pom.xml"

      # Build and run SonarQube analysis
      - name: Build and analyze with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          # Optional: cd into subdirectory if your pom.xml is not in root
          # cd your-subdirectory-name

          # Debug: List directory contents
          echo "Current directory:"
          pwd
          ls -la

          # Run Maven build and Sonar analysis
          mvn -X -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=newproject \
            -Dsonar.projectName='newproject'
